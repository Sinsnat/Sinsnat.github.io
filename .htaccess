# ========================================
# FICHIER .HTACCESS SÉCURISÉ
# Configuration complète pour Sinsnat.github.io
# ========================================

# ========================================
# 1. SÉCURITÉ GÉNÉRALE
# ========================================

# Désactiver l'affichage du contenu des répertoires
Options -Indexes

# Désactiver l'exécution de scripts dans les répertoires
Options -ExecCGI

# Désactiver l'inclusion de fichiers côté serveur
Options -Includes

# Désactiver la négociation de contenu
Options -MultiViews

# Désactiver les liens symboliques
Options -FollowSymLinks

# ========================================
# 2. PROTECTION CONTRE LES ATTAQUES
# ========================================

# Bloquer les tentatives d'accès aux fichiers sensibles
<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|sql|conf)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Bloquer l'accès aux fichiers de sauvegarde
<FilesMatch "\.(bak|backup|old|orig|save|swp|tmp)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Bloquer l'accès aux fichiers de configuration
<FilesMatch "^(wp-config|config|\.env|\.git)">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# ========================================
# 3. EN-TÊTES DE SÉCURITÉ
# ========================================

# Protection XSS
<IfModule mod_headers.c>
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
    
    # Content Security Policy (CSP)
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://fonts.gstatic.com https://framerusercontent.com https://app.framerstatic.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://framerusercontent.com; font-src 'self' https://fonts.gstatic.com https://framerusercontent.com https://app.framerstatic.com; img-src 'self' data: https:; connect-src 'self' https://framerusercontent.com; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';"
    
    # HSTS (HTTP Strict Transport Security)
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</IfModule>

# ========================================
# 4. PROTECTION CONTRE LES BOTS MALVEILLANTS
# ========================================

# Bloquer les User-Agents malveillants
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Bloquer les bots malveillants
    RewriteCond %{HTTP_USER_AGENT} ^$ [OR]
    RewriteCond %{HTTP_USER_AGENT} ^(java|curl|wget) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^.*(libwww-perl|curl|wget|python|nikto|scan) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} ^.*(winhttp|HTTrack|clshttp|archiver|loader|email|harvest|extract|grab|miner) [NC]
    RewriteRule .* - [F,L]
    
    # Bloquer les tentatives d'injection SQL et XSS
    RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} proc/self/environ [OR]
    RewriteCond %{QUERY_STRING} mosConfig [OR]
    RewriteCond %{QUERY_STRING} base64_(en|de)code[^(]*\([^)]*\) [OR]
    RewriteCond %{QUERY_STRING} (<|%3C)([^s]*s)+cript.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*iframe.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*object.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*embed.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*form.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*input.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*textarea.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*select.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*link.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*meta.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*style.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*applet.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*param.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*blink.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*marquee.*(\>|%3E) [NC]
    RewriteRule .* - [F,L]
</IfModule>

# ========================================
# 5. OPTIMISATION DES PERFORMANCES
# ========================================

# Compression GZIP
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE image/svg+xml
</IfModule>

# Cache des navigateurs
<IfModule mod_expires.c>
    ExpiresActive On
    
    # Images
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
    
    # CSS et JavaScript
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    
    # Fonts
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # HTML
    ExpiresByType text/html "access plus 1 hour"
</IfModule>

# ========================================
# 6. RÉÉCRITURE D'URLS
# ========================================

<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Forcer HTTPS
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Supprimer www (optionnel)
    # RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
    # RewriteRule ^(.*)$ https://%1/$1 [R=301,L]
    
    # Redirection des erreurs
    ErrorDocument 404 /index.html
    ErrorDocument 403 /index.html
    ErrorDocument 500 /index.html
</IfModule>

# ========================================
# 7. PROTECTION SUPPLÉMENTAIRE
# ========================================

# Bloquer l'accès aux fichiers de développement
<FilesMatch "\.(map|md|txt|log)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Protection contre les attaques par force brute
<IfModule mod_evasive24.c>
    DOSHashTableSize 2048
    DOSPageCount 20
    DOSSiteCount 50
    DOSPageInterval 1
    DOSSiteInterval 1
    DOSBlockingPeriod 10
</IfModule>

# ========================================
# 8. CONFIGURATION SPÉCIFIQUE AU SITE
# ========================================

# Autoriser l'accès aux fichiers nécessaires
<Files "CNAME">
    Order Allow,Deny
    Allow from all
</Files>

<Files "index.html">
    Order Allow,Deny
    Allow from all
</Files>

# Autoriser l'accès aux images et favicons
<FilesMatch "\.(jpg|jpeg|png|gif|webp|ico|svg)$">
    Order Allow,Deny
    Allow from all
</FilesMatch>

# ========================================
# FIN DE LA CONFIGURATION
# ========================================

